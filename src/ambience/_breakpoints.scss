$breakpoint-small: 640px;
$breakpoint-medium: 1024px;
$breakpoint-large: 1440px;
$breakpoint-huge: 1920px;

@mixin medium-only {
  @media (min-width: #{$breakpoint-small + 1px}) and (max-width: #{$breakpoint-medium}) {
    @content;
  }
}

@mixin large-only {
  @media (min-width: #{$breakpoint-medium + 1px}) and (max-width: #{$breakpoint-large}) {
    @content;
  }
}

@mixin huge-only {
  @media (min-width: #{$breakpoint-large + 1px}) and (max-width: #{$breakpoint-huge}) {
    @content;
  }
}

@mixin medium-up {
  @media (min-width: #{$breakpoint-small + 1px}) {
    @content;
  }
}

@mixin large-up {
  @media (min-width: #{$breakpoint-medium + 1px}) {
    @content;
  }
}

@mixin huge-up {
  @media (min-width: #{$breakpoint-large + 1px}) {
    @content;
  }
}

@mixin medium-down {
  @media (max-width: #{$breakpoint-medium}) {
    @content;
  }
}

@mixin large-down {
  @media (max-width: #{$breakpoint-large}) {
    @content;
  }
}


// Gives a property responsive sizing behavior
// Params:
//    $property: the name of the property to be responsive
//    $mobile: value in pixels that the property shall have @375w
//    $value: optional value in pixels that the property shall have @1024, @1440 and @1920
@mixin responsive($property, $mobile, $value: false) {

  // small-only
  #{$property}: #{$mobile / 3.75}vw;

  @if ($value) {
    @include medium-only {
      #{$property}:  #{$value / 10.24}vw;
    }

    @include large-only {
      #{$property}: #{$value / 14.4}vw;
    }

    @include huge-up {
      #{$property}: #{$value / 19.2}vw;
    }
  }
}
